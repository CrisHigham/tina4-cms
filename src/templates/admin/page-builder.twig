{% set title = "Page Builder" %}
{% extends twigNameSpace ~ '/base.twig' %}
{% block headers %}
    <script src="{{ Theme.Dir(site.theme) }}/js/jquery.min.js"></script>
    <script src="{{ Theme.Dir(site.theme) }}/js/bootstrap.bundle.min.js"></script>

    <link rel="stylesheet" type="text/css" href="{{ Theme.Dir(site.theme) }}/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="{{ Theme.Dir(site.theme) }}/css/bootstrap-grid.min.css">
    <link rel="stylesheet" type="text/css" href="{{ Theme.Dir(site.theme) }}/css/bootstrap-reboot.min.css">
    <link rel="stylesheet" type="text/css" href="{{ Theme.Dir(site.theme) }}/css/bootstrap-utilities.min.css">


    <link href="https://cdn.datatables.net/v/bs5/jszip-3.10.1/dt-1.13.6/af-2.6.0/b-2.4.2/b-colvis-2.4.2/b-html5-2.4.2/b-print-2.4.2/cr-1.7.0/date-1.5.1/fc-4.3.0/fh-3.4.0/kt-2.10.0/r-2.5.0/rg-1.4.0/rr-1.4.1/sc-2.2.0/sb-1.6.0/sp-2.2.0/sl-1.7.0/sr-1.3.0/datatables.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/v/bs5/jszip-3.10.1/dt-1.13.6/af-2.6.0/b-2.4.2/b-colvis-2.4.2/b-html5-2.4.2/b-print-2.4.2/cr-1.7.0/date-1.5.1/fc-4.3.0/fh-3.4.0/kt-2.10.0/r-2.5.0/rg-1.4.0/rr-1.4.1/sc-2.2.0/sb-1.6.0/sp-2.2.0/sl-1.7.0/sr-1.3.0/datatables.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.js"
            integrity="sha256-xLhce0FUawd11QSwrvXSwST0oHhOolNoH9cUXAcsIAg=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/additional-methods.js"
            integrity="sha256-NdDw7k+fJewgwI1XmH9NMR6OILvTX+3arqb/OgFicoM=" crossorigin="anonymous"></script>


    <script src="https://unpkg.com/grapesjs-custom-code"></script>
    <script src="https://unpkg.com/grapesjs-component-code-editor"></script>
    <script src="https://unpkg.com/grapesjs-parser-postcss"></script>
    <script src="https://unpkg.com/grapesjs@0.21.2/dist/grapes.min.js"></script>


    <script src="{{ Content.getTinyMCEIncludePath }}/tinymce/tinymce.min.js" referrerpolicy="origin"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js"
            integrity="sha512-GZ1RIgZaSc8rnco/8CXfRdCpDxRCphenIiZ2ztLy3XQfCbQUSCuk8IudvNHxkRA3oUg6q0qejgN/qqyG1duv5Q=="
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/mode-twig.min.js"
            integrity="sha512-ZtTfixyUItifC8wzQ1PwinttMP5W02H6zYeC/cAU+YPCA88vcrIUMI+fCk27yWN5k92zm32PWjpKYPYR/npZzg=="
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/theme-monokai.min.js"
            integrity="sha512-S4i/WUGRs22+8rjUVu4kBjfNuBNp8GVsgcK2lbaFdws4q6TF3Nd00LxqnHhuxS9iVDfNcUh0h6OxFUMP5DBD+g=="
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/theme-sqlserver.min.js"
            integrity="sha512-TkNvDZzCp+GGiwfXNAOxt6JDzuELz8qquDcZrUzPXuKRvOcUA6kSZu2/uPhKbbjqeJIjoevYn10yrt8TS+qUXQ=="
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/typeahead.js/0.11.1/typeahead.bundle.min.js"></script>

    <script src="/js/bootstrap-tagsinput.js" ></script>
    <script src="/js/tina4helper.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/grapesjs/0.21.2/css/grapes.min.css"
          integrity="sha512-teZVIvNgTrmIIFs77Fs03dArj3HsJbQ6QMFRE5nAnt7etwO3wTgW2Z/1l6uvd1/TAycO68STs2QitYKzE2BqCg=="
          crossorigin="anonymous" referrerpolicy="no-referrer"/>

    <link rel="stylesheet" href="/css/page-builder.css">
    <link rel="stylesheet" type="text/css" href="{{ Theme.Dir(site.theme) }}/css/admin.css">
{% endblock %}
{% block navigation %}
{% endblock %}
{% block content %}
    <div class="app-wrap">
        <div class="nav-sidebar">
            <div href="/" class="tina-logo"><img src="{{ baseUrl }}/images/tina4-logo-icon.png" width="100%">
                {% if session.user is not null and countSites > 1 and session.user.siteId == 1 %}
                    <div id="siteDropDown" style="float: right">
                        <label for="siteId">Choose Site</label>
                        <form id="setSite" action="/cms/site/set" method="post">
                            <select id="siteId" name="siteId" class="form-control" style=" width: 140px" onchange="document.getElementById('setSite').submit()">
                                {% for listSite in sites %}
                                    <option value="{{ listSite.id }}" {% if listSite.id == session.siteId %}selected{% endif %}>{{ listSite.siteName }}</option>
                                {% endfor %}
                            </select>
                            <input type="hidden" name="formToken" value="{{ formToken("siteSet") }}">
                        </form>
                    </div>
                {% endif %}
            </div>
            <a href="#" class="pages-link" onclick="setActive(this); $('#gjs').hide(); $('#cms').show(); loadPage('/cms/dashboard', 'cms')">Content</a>
            <a href="#" class="pages-link" onclick="setActive(this); $('#gjs').show(); $('#cms').hide(); loadGrapeJsPage('layout')">Page Layout</a>
            <a href="#" class="pages-link" onclick="setActive(this); $('#gjs').show(); $('#cms').hide(); loadGrapeJsPage('layoutArticle')">Article Layout</a>
            <h3 class="pages-heading">Pages</h3>
            <div class="pages">
                {% for page in pages %}
                    <a href="#" class="pages-link" onclick="setActive(this); $('#gjs').show(); $('#cms').hide(); loadGrapeJsPage('{{ page.id }}')">{{ page.title }}</a>
                {% endfor %}
            </div>
            <a href="/cms/logout" class="pages-link pages-link--logout">Logout</a>
        </div>
        <div class="main-content">
            <div class="cms container-fluid" style="" id="cms"></div>
            <div style="display:none" id="gjs"></div>
        </div>
    </div>
    {% if not session.user %}
        {% do redirect('/cms/login') %}
    {% endif %}
    <script>
        const editor = grapesjs.init({
            container: '#gjs',
            jsInHtml : false,
            allowScripts: true,
            canvas: {
                scripts: {{ Theme.Scripts(site.theme) | raw }},
                styles: {{ Theme.Styles(site.theme) | raw }},
            },
            plugins: ['grapesjs-custom-code', 'grapesjs-component-code-editor', 'grapesjs-parser-postcss'],
            assetManager: {
                    // Upload endpoint, set `false` to disable upload, default `false`
                    upload: '/cms/page-builder/assets/upload?siteId={{ site.id }}&formToken={{ formToken }}'
            },
            storageManager: {
                type: 'remote',
                stepsBeforeSave: 1,
                autosave: true,
                autoload: true,
                contentTypeJson: true,
                storeComponents: true,
                storeStyles: true,
                storeHtml: true,
                storeCss: true,
                options: {
                    remote: {
                        urlLoad: "/cms/page-builder/pages?siteId={{ site.id }}",
                        urlStore: "/cms/page-builder/pages?siteId={{ site.id }}&formToken={{ formToken }}",
                        onStore: data => ({
                            pageId: pageManager.getSelected().id,
                            html: editor.getHtml(),
                            css: editor.getCss(),
                            data: data
                        })
                    }
                }
            }

        });

        let pageManager = editor.Pages;
        let storageManager = editor.Storage;
        let panelManager = editor.Panels;

        //console.log('Panels', panelManager.getPanels());

        editor.Panels.addButton('options', [
            {id: 'undo', className: 'fa fa-undo', command: 'core:undo'},
            {id: 'redo', className: 'fa fa-repeat', command: 'core:redo'},
            {id: 'delete', className: 'fa fa-trash', command: 'core:canvas-clear'}
        ]);

        const panelViews = panelManager.addPanel({
            id: "views"
        });

        panelViews.get("buttons").add([
            {
                attributes: {
                    title: "Open Code"
                },
                className: "fa fa-file-code-o",
                command: "open-code",
                togglable: false, //do not close when button is clicked again
                id: "open-code"
            }
        ]);

        async function loadGrapeJsPage(pageId) {
            const data = editor.getProjectData();
            await storageManager.store(data);
            pageManager.select(pageId);
        }

        /**
         * Adds an active class to the selected menu and removes from the others
         * @param a
         */
        function setActive(a) {
            let otherAnchors = a.parentNode.getElementsByTagName('a')
            for (let i = 0; i < otherAnchors.length; i++) {
                otherAnchors[i].classList.remove('active');
            }
            a.classList.add('active');
        }

        //editor.on('page', (event) => {
        //    console.log('Page changed', event);
        //});

        editor.on('load', (event) => {

                //const blockBtn = editor.Panels.getButton('views', 'open-blocks');
                //blockBtn.set('active', 1);
                //editor.runCommand('core:open-blocks');
        });

        // editor.on('save', (event) => {
        //    console.log('Page loading', event, event.page.getHtml());
        //});

        editor.on('rte:enable', () => {


        });

        const rte = editor.RichTextEditor;
        rte.add('openai', {
            icon: '<b>C</b>',
            attributes: {title: 'AI Enhance'},
            result: async function (rte) {
                let prompt = await rte.selection().toString();
                console.log (prompt);
                fetch('/cms/page-builder/open-ai?prompt='+rte.el.innerHTML)
                    .then(async function(response) {
                        const data = await response.text();
                        rte.el.innerHTML = data;
                    });
            }
        });


        // Get the BlockManager module first
        const blockManager = editor.Blocks; // `Blocks` is an alias of `BlockManager`

        //Load tina4cms
        loadPage('/cms/dashboard', 'cms');
    </script>
    <!-- Add blocks -->
    {% set blocks = Theme.Blocks(site.theme) %}
    {% for block in blocks %}
        <script src="{{ block }}"></script>
    {% endfor %}
    <!-- Add components -->
    {% set components = Theme.Components(site.theme) %}
    {% for component in components %}
        <script src="{{ component }}"></script>
    {% endfor %}

{% endblock %}